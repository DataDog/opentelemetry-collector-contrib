mode: daemonset
image:
  repository: 172597598159.dkr.ecr.us-east-1.amazonaws.com/otel-collector-contrib
  tag: ""
extraVolumes:
  - name: cgroups
    hostPath:
      path: /sys/fs/cgroup
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
extraVolumeMounts:
  - name: cgroups
    mountPath: /sys/fs/cgroup
  - name: docker-sock
    mountPath: /var/run/docker.sock
securityContext:
  runAsUser: 0
  runAsGroup: 0
resources:
  limits:
    cpu: 256m
    memory: 1Gi
presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: true
    storeCheckpoints: false
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: true
  kubernetesEvents:
    enabled: true
  kubeletMetrics:
    enabled: true
extraEnvs:
  - name: POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  - name: OTEL_RESOURCE_ATTRIBUTES
    value: "k8s.pod.ip=$(POD_IP)"
  - name: DD_API_KEY
    valueFrom:
      secretKeyRef:
        name: datadog-secrets
        key: api-key
        optional: false
config:
  receivers:
    jaeger: null
    zipkin: null
    docker_stats:
      metrics:
        container.network.io.usage.rx_packets:
          enabled: true
        container.network.io.usage.tx_packets:
          enabled: true
        container.cpu.usage.system:
          enabled: true
        container.memory.rss:
          enabled: true
        container.blockio.io_serviced_recursive:
          enabled: true
    hostmetrics:
      scrapers:
        paging:
          metrics:
            system.paging.utilization:
              enabled: true
        cpu:
          metrics:
            system.cpu.utilization:
              enabled: true
        disk:
        load:
        memory:
        network:
        processes:
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318
  exporters:
    datadog:
      host_metadata:
        tags: ['env:otel']
      metrics:
        histograms:
          mode: counters
          send_count_sum_metrics: true
      traces:
        span_name_as_resource_name: true
        compute_stats_by_span_kind: true
        peer_service_aggregation: true
      api:
        key: "$DD_API_KEY"
  processors:
    resourcedetection:
      # ensures host.name and other important resource tags
      # get picked up
      detectors: [env, gcp, ecs, ec2, azure, system]
      timeout: 5s
      override: false
    # adds various tags related to k8s
    # adds various tags related to k8s
    k8sattributes:
      passthrough: false
      auth_type: "serviceAccount"
      pod_association:
        - sources:
            - from: resource_attribute
              name: k8s.pod.ip
      extract:
        metadata:
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.deployment.name
          - k8s.node.name
          - k8s.namespace.name
          - k8s.pod.start_time
          - k8s.replicaset.name
          - k8s.replicaset.uid
          - k8s.daemonset.name
          - k8s.daemonset.uid
          - k8s.job.name
          - k8s.job.uid
          - k8s.cronjob.name
          - k8s.statefulset.name
          - k8s.statefulset.uid
          - container.image.name
          - container.image.tag
          - container.id
          - k8s.container.name
          - container.image.name
          - container.image.tag
          - container.id
        labels:
          - tag_name: kube_app_name
            key: app.kubernetes.io/name
            from: pod
          - tag_name: kube_app_instance
            key: app.kubernetes.io/instance
            from: pod
          - tag_name: kube_app_version
            key: app.kubernetes.io/version
            from: pod
          - tag_name: kube_app_component
            key: app.kubernetes.io/component
            from: pod
          - tag_name: kube_app_part_of
            key: app.kubernetes.io/part-of
            from: pod
          - tag_name: kube_app_managed_by
            key: app.kubernetes.io/managed-by
            from: pod
    batch:
      send_batch_max_size: 1000
      send_batch_size: 100
      timeout: 10s
  service:
    telemetry:
      logs:
        encoding: "json"
        initial_fields:
          - service: "otel-collector"
    pipelines:
      metrics:
        receivers: [otlp, hostmetrics, prometheus, docker_stats]
        processors: [resourcedetection, k8sattributes, batch]
        exporters: [datadog]
      traces:
        receivers: [otlp]
        processors: [resourcedetection, k8sattributes, batch]
        exporters: [datadog]
      logs:
        processors: [resourcedetection, k8sattributes, batch]
        exporters: [datadog]
