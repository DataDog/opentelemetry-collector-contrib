variables:
  CI_PROJECT_NAME: 'opentelemetry-collector-contrib'
  CURRENT_CI_IMAGE: 7
  BUILD_STABLE_REGISTRY: '486234852809.dkr.ecr.us-east-1.amazonaws.com'
  CI_IMAGE: '$BUILD_STABLE_REGISTRY/ci/$APP:$CURRENT_CI_IMAGE'
  RESTORE_CACHE_ATTEMPTS: 2
  BUILD_DD_REGISTRY: registry.ddbuild.io/ci/opentelemetry-collector-contrib
  BUILD_DEMO_REGISTRY: 172597598159.dkr.ecr.us-east-1.amazonaws.com/otel-collector-contrib
  DOCKERFILE: ci/Dockerfile

stages:
  - build
  - prod-deploy

# =======================================================================
# Build and deploy the images used for CI
# =======================================================================

.build-ci-image: &build-ci-image
  stage: build
  tags: ["runner:docker"]
  image: $CI_IMAGE
  script:
    - IMAGE_TAG_PREFIX=otelcolcontrib
    - TAG="$IMAGE_TAG_PREFIX-v$CI_COMMIT_SHORT_SHA"
    - docker build --file $DOCKERFILE --tag $BUILD_REGISTRY:$TAG --label target=staging .
    - docker push $BUILD_REGISTRY:$TAG

build-ci-image-main:
  <<: *build-ci-image
  variables:
    BUILD_REGISTRY: $BUILD_DD_REGISTRY

build-ci-image-demo:
  <<: *build-ci-image
  variables:
    BUILD_REGISTRY: $BUILD_DEMO_REGISTRY

prod-deploy-demo-eks:
  only:
    refs:
      - prod
  stage: prod-deploy
  tags: ['runner:docker', 'size:large']
  image: $CI_IMAGE
  script:
    - >-
        TEMP_AWS_ACCESS_KEY_ID=$(aws ssm get-parameter --region us-east-1
        --name ci.dd-trace-demo.eks_access_key
        --with-decryption --query Parameter.Value
        --out text)
    - >-
        TEMP_AWS_SECRET_ACCESS_KEY=$(aws ssm get-parameter --region us-east-1
        --name ci.dd-trace-demo.eks_secret_access_key
        --with-decryption --query Parameter.Value
        --out text)
    - export AWS_ACCESS_KEY_ID=$TEMP_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$TEMP_AWS_SECRET_ACCESS_KEY
    - bash ./ci/scripts/ci-deploy-demo.sh
